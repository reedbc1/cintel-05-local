[{"name": "app.py", "content": "# --------------------------------------------\n# Imports at the top - PyShiny EXPRESS VERSION\n# --------------------------------------------\n\n# From shiny, import just reactive and render\nfrom shiny import reactive, render\n\n# From shiny.express, import just ui\nfrom shiny.express import ui\n\n# Imports from Python Standard Library to simulate live data\nimport random\nfrom datetime import datetime\n\n# --------------------------------------------\n# Import icons as you like\n# --------------------------------------------\n\nfrom faicons import icon_svg\n\n# --------------------------------------------\n# FOR LOCAL DEVELOPMENT\n# --------------------------------------------\n# Add all packages not in the Std Library\n# to requirements.txt:\n#\n# faicons\n# shiny\n# shinylive\n# \n# And install them into an active project virtual environment (usually in .venv)\n# --------------------------------------------\n\n# --------------------------------------------\n# SET UP THE REACIVE CONTENT\n# --------------------------------------------\n\n# --------------------------------------------\n# PLANNING: We want to get a fake temperature and \n# Time stamp every N seconds. \n# For now, we'll avoid storage and just \n# Try to get the fake live data working and sketch our app. \n# We can do all that with one reactive calc.\n# Use constants for update interval so it's easy to modify.\n# ---------------------------------------------------------\n\n# --------------------------------------------\n# First, set a constant UPDATE INTERVAL for all live data\n# Constants are usually defined in uppercase letters\n# Use a type hint to make it clear that it's an integer (: int)\n# --------------------------------------------\n\nUPDATE_INTERVAL_SECS: int = 1\n\n# --------------------------------------------\n# Initialize a REACTIVE CALC that our display components can call\n# to get the latest data and display it.\n# The calculation is invalidated every UPDATE_INTERVAL_SECS\n# to trigger updates.\n# It returns everything needed to display the data.\n# Very easy to expand or modify.\n# (I originally looked at REACTIVE POLL, but this seems to work better.)\n# --------------------------------------------\n\n\n@reactive.calc()\ndef reactive_calc_combined():\n    # Invalidate this calculation every UPDATE_INTERVAL_SECS to trigger updates\n    reactive.invalidate_later(UPDATE_INTERVAL_SECS)\n\n    # Data generation logic. Get random between -18 and -16 C, rounded to 1 decimal place\n    temp = round(random.uniform(-18, -16), 1)\n\n    # Get a timestamp for \"now\" and use string format strftime() method to format it\n    # \n    timestamp = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n    latest_dictionary_entry = {\"temp\": temp, \"timestamp\": timestamp}\n\n    # Return everything we need\n    return latest_dictionary_entry\n\n# ------------------------------------------------\n# Define the Shiny UI Page layout - Page Options\n# ------------------------------------------------\n\n# Call the ui.page_opts() function\n# Set title to a string in quotes that will appear at the top\n# Set fillable to True to use the whole page width for the UI\n\nui.page_opts(title=\"PyShiny Express: Live Data (Basic)\", fillable=True)\n\n# ------------------------------------------------\n# Define the Shiny UI Page layout - Sidebar\n# ------------------------------------------------\n\n# Sidebar is typically used for user interaction/information\n# Note the with statement to create the sidebar followed by a colon\n# Everything in the sidebar is indented consistently\n\nwith ui.sidebar(open=\"open\"):\n\n    ui.h2(\"Antarctic Explorer\", class_=\"text-center\")\n\n    ui.p(\n        \"A demonstration of real-time temperature readings in Antarctica.\",\n        class_=\"text-center\",\n    )\n\n    ui.hr()\n\n    ui.h6(\"Links:\")\n\n    ui.a(\n        \"GitHub Source\",\n        href=\"https://github.com/denisecase/cintel-05-cintel-basic\",\n        target=\"_blank\",\n    )\n\n    ui.a(\n        \"GitHub App\",\n        href=\"https://denisecase.github.io/cintel-05-cintel-basic/\",\n        target=\"_blank\",\n    )\n\n    ui.a(\"PyShiny\", href=\"https://shiny.posit.co/py/\", target=\"_blank\")\n\n\n#---------------------------------------------------------------------\n# In Shiny Express, everything not in the sidebar is in the main panel\n#---------------------------------------------------------------------\n    \nui.h2(\"Current Temperature\")\n\n@render.text\ndef display_temp():\n    \"\"\"Get the latest reading and return a temperature string\"\"\"\n    latest_dictionary_entry = reactive_calc_combined()\n    return f\"{latest_dictionary_entry['temp']} C\"\n\nui.p(\"warmer than usual\")\nicon_svg(\"sun\")\n\n\nui.hr()\n\nui.h2(\"Current Date and Time\")\n\n@render.text\ndef display_time():\n    \"\"\"Get the latest reading and return a timestamp string\"\"\"\n    latest_dictionary_entry = reactive_calc_combined()\n    return f\"{latest_dictionary_entry['timestamp']}\"\n\n\nwith ui.layout_columns():\n    with ui.card():\n        ui.card_header(\"Current Data (placeholder only)\")\n\nwith ui.layout_columns():\n    with ui.card():\n        ui.card_header(\"Current Chart (placeholder only)\")", "type": "text"}]